<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations"> 
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
		
	<!-- 配置ibatis -->
	<bean id="sqlMapClient"
		class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation"
			value="sqlMapConfig.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlMapClientTemplate"
		class="org.springframework.orm.ibatis.SqlMapClientTemplate">
		<property name="sqlMapClient">
			<ref bean="sqlMapClient" />
		</property>
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<bean id="jdbcDao" abstract="true">
		<property name="jdbcTemplate" ref="jdbcTemplate"></property>
	</bean>
	
	<!--配置事务管理器--> 
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
	        <property name="dataSource" ref="dataSource"></property> 
	</bean>
	<!--配置哪些方法,什么情况下需要回滚--> 
	<tx:advice id="serviceAdvice" transaction-manager="transactionManager">  
	    <tx:attributes>   
	        <!--当代理的service层中的方法抛出异常的时候才回滚,必须加rollback-for参数--> 
	        <tx:method name="deposit" propagation="REQUIRED" rollback-for="Throwable"/>  
	        <!--除了上面标识的方法,其他方法全是只读方法 
	        <tx:method name="*" read-only="true"/> --> 
	    </tx:attributes>  
	</tx:advice>  
	<!-- 配置哪些类的方法需要进行事务管理 -->  
	<aop:config proxy-target-class="true">  
	<aop:pointcut id="servicePointcut" expression="execution(* com.longcom.pay.asset.service.*.*(..))"/>  
	<aop:advisor pointcut-ref="servicePointcut" advice-ref="serviceAdvice"/>  
	</aop:config> 
	
	<import resource="applicationContext-user.xml"/>
</beans>